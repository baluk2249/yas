pipeline {
    agent any
    stages {
        /*
        stage('Build') {
            steps {
                sh 'mvn clean install -pl cart -am'
            }
        }
        
        stage('Scan') {
            steps {
                withSonarQubeEnv(installationName: 'sq') {
                    sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -pl cart -am'
                }
            }
        }
        */
        
        stage('Run maven checkstyle and record issues') {
            steps {
                sh 'mvn checkstyle:checkstyle -pl cart -am -Dcheckstyle.output.file=cart-checkstyle-result.xml'
                recordIssues(tools: [checkStyle(pattern: '**/cart-checkstyle-result.xml')])
            }
        }
        stage('test') {
            steps {
                junit 'cart/**/*-reports/TEST*.xml'
                // recordIssues(tools: [java(pattern: 'cart/**/*-reports/TEST*.xml')])
            }
        }
        stage('OWASP Dependency-Check') {
            steps {
                sh '''
                mvn org.owasp:dependency-check-maven:7.2.0:check \
                        -pl cart -am \
                        -Ddependency-check.cache.directory=./dependency-check-cache \
                        -Ddependency-check.data.directory=./dependency-check-data
                '''
                recordIssues(tools: [dependencyCheck(pattern: 'cart/dependency-check-report.xml')])
            }
        }
    }
}